// Copyright 2014 Google Inc.All Rights Reserved.
//
//     Licensed under the Apache License,
//     Version 2.0(the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package qrisp;

// This protocol buffer message represents one RNA secondary structure.
message StructureMessage {
  // Encodes the structure in terms of base pairs.
  // We only store the paired positions. Each pair consists of a lo, hi pair
  // where lo is holding the lower index of the two indices (hi the higher,
  // duh).
  // Example: .((....)). translates to 0980000320, so we store the pairs (2,9)
  // and (3,8).

  // The sequence of nucleotides.
  message Row {
    // Position of the structure. Starting with 1.
    optional uint32 pos = 1;

    // If pos is a paired nucleotide pair is the index of the partner. If pos is
    // unpaired then this is 0.
    optional uint32 pair = 2 [default = 0];

    // The base given as an integer index A=0, C=1, G=2, U=3.
    optional uint32 base = 3 [default = 0];

    // A position-specific real-valued confidence / quality / score.
    optional float score = 4 [default = 0.0];
  }

  repeated Row rows = 1;

  // An optional description of the structure.
  optional string description = 2;
}

// A wrapper for a set of RNA secondary structures.
message StructureSetMessage {
  // An Item is a single RNASStructure together with an identifier.
  message Item {
    required string id = 1;

    required StructureMessage structure = 2;
  }
  repeated Item item = 3;
}

// message Pair {
//  required int32 lo = 1;
//  required int32 hi = 2;
//}
// repeated Pair pairs = 1;

//// The total length of the secondary structure.
// optional int32 length = 2;

// The sequence of nucleotides.
// repeated int32 base = 3;

//// Position-wise confidence values.
// repeated float confidence = 4;

//// Bracket representation of the structure. Example "(.(...))".
// optional string brackets = 5;

//// Sequence information as a string. Example: "CGGAAA".
// optional string sequence = 6;

//// An optional description of the structure.
// optional string description = 7;
