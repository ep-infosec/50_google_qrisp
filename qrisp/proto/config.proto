// Copyright 2014 Google Inc.All Rights Reserved.
//
//     Licensed under the Apache License,
//     Version 2.0(the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package qrisp;

message PerformanceData {
  optional int32 iteration = 1;

  optional double sensitivity = 2;

  optional double specificity = 3;

  optional int32 cluster_size = 4;
}

message PerformanceProto {
  repeated PerformanceData data = 1;
}

// Next id: 18
message ConfigMessage {
  // Enable the use of quality features during dynamic programming execution.
  optional bool enable_quality_features = 1;

  // The learning rate that will be used in training.
  optional double learning_rate = 5;

  // The factor in front of the regularization part of the objective function.
  optional double regularization_coeff = 6;

  // DEPRECATED The file name of the configuration.
  optional string config_fn = 7;

  // The location of the sstable that contains the training data.
  optional string input_data = 8;

  // The file name the model will be stored under (as a ProtoBuffer).
  optional string model_fn = 9;

  // The file name the model will be stored under (as a ProtoBuffer).
  optional string pretrained_model_fn = 10;

  // The file name of the file holding a list of files that shall be used in
  // training.
  optional string split_fn = 11;

  // The file name of the file holding a list of files that shall be used in
  // training.
  optional string holdout_fn = 12;

  // The file name the model will be stored under (as a ProtoBuffer).
  optional string result_dir = 13;

  // The maximum number of iterations/passes through the whole dataset.
  optional int32 max_iter = 14;

  //
  optional bool plot_features = 2;

  //
  optional bool visualize_training = 3;

  // The precision we are using.
  optional double epsilon = 4 [default = 1e-6];

  //
  repeated PerformanceData training_performance = 15;

  //
  repeated PerformanceData holdout_performance = 16;

  // List of values for nbest-centroid " "calculation. Example: If the list is
  // '1,3,7' the centroids from the 1, 3 and 7 highest-scoring structures are
  // used as the predicted structures. So basically we report performance @1,
  // @3 and @7.
  repeated int32 nbest_values = 17;

  optional bool resume_training = 18;

  optional string resume_model_fn = 19;
}

// This protocol buffer stores a model of the QRSP project. It contains features
// represented by a unique integer id and a feature value.
message QRSPModel {
  //
  message Feature {
    required int32 id = 1;
    required double value = 2;
  }
  repeated Feature feature = 1;

  repeated PerformanceData holdout_performance = 2;
}
